---
export interface Props {
	title: string
}

const colors = {
	color_char: '#D8DEE9',
	color_comment: '#999999',
	color_keyword: '#c5a5c5',
	color_lineHighlight: '#14161a',
	color_primitive: '#5a9bcf',
	color_string: '#8dc891',
	color_variable: '#d7deea',
	color_boolean: '#ff8b50',
	color_punctuation: '#5FB3B3',
	color_tag: '#fc929e',
	color_function: '#79b6f2',
	color_className: '#FAC863',
	color_method: '#6699CC',
	color_operator: '#fc929e',
}

const { title } = Astro.props as Props
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="x-ua-compatible" content="ie=edge" />
		<meta
			name="viewport"
			content="width=device-width, initial-scale=1, shrink-to-fit=no"
		/>
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<slot name="header" />
		<slot />
		<slot name="footer" />
		<style lang="scss" is:global define:vars={{ ...colors }}>
			* {
				box-sizing: border-box;
				margin: 0;
				padding: 0;
			}

			body {
				font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
					Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
				font-style: normal;
				font-weight: 400;
				fill: currentColor;

				@media (min-width: 780px) {
					margin: 60px 0 0 0;
				}
			}

			code,
			pre {
				font-family: source-code-pro, Menlo, Monaco, Consolas, Courier New,
					monospace;
				font-weight: 300;
			}

			.content a {
				text-decoration: none;
			}

			blockquote .gatsby-highlight {
				margin: 1.5em 0 1.5em 0;
				padding: 0.5em;
			}

			pre {
				font-size: 15px;
				line-height: 1.7;
				background: #282c34;
				color: #ffffff;
				border-radius: 10px;
				overflow: auto;
				tab-size: 1.5em;

				margin: 1.5em -1em 1.5em 0;
				padding: 1em;

				@media (min-width: 780px) {
					margin-left: -2em;
					padding-left: 2em;
					padding-right: 2em;
					font-size: 16px;
				}

				.token.attr-name {
					color: var(--color_keyword);
				}

				.token.comment,
				.token.block-comment,
				.token.prolog,
				.token.doctype,
				.token.cdata {
					color: var(--color_comment);
				}

				.token.property,
				.token.number,
				.token.function-name,
				.token.constant,
				.token.symbol,
				.token.deleted {
					color: var(--color_primitive);
				}

				.token.boolean {
					color: var(--color_boolean);
				}

				.token.tag {
					color: var(--color_tag);
				}

				.token.string {
					color: var(--color_string);
				}

				.token.punctuation {
					color: var(--color_punctuation);
				}

				.token.selector,
				.token.char,
				.token.builtin,
				.token.inserted {
					color: var(--color_char);
				}

				.token.function {
					color: var(--color_function);
				}

				.token.operator,
				.token.entity,
				.token.url,
				.token.variable {
					color: var(--color_variable);
				}

				.token.attr-value {
					color: var(--color_string);
				}

				.token.keyword {
					color: var(--color_keyword);
				}

				.token.atrule,
				.token.class-name {
					color: var(--color_className);
				}

				.token.important {
					font-weight: 400;
				}

				.token.bold {
					font-weight: 700;
				}
				.token.italic {
					font-style: italic;
				}

				.token.entity {
					cursor: help;
				}
			}

			.gatsby-highlight > pre {
				height: auto !important;
				margin: 1rem;
				white-space: pre-wrap;
				word-break: break-word;
			}

			.gatsby-highlight + .gatsby-highlight {
				margin-top: 20px;
			}

			.gatsby-highlight-code-line {
				background-color: #14161a;
				display: block;
				margin: -0.125rem calc(-1rem - 15px);
				padding: 0.125rem calc(1rem + 15px);
			}
		</style>
	</body>
</html>
