---
import type { GetStaticPathsOptions } from 'astro'
import { sortByFrontmatterDate, PAGE_SIZE } from '../utils/posts'
import type { PostType } from '../utils/posts'
import * as links from '../utils/links'

import Layout from '../layouts/Layout.astro'
import SEO from '../components/SEO.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import BlogList from '../components/BlogList.astro'
import type { Props as BlogListProps } from '../components/BlogList.astro'

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = await Astro.glob<PostType>('../../content/posts/**/*.(md|mdx)')
  posts.sort(sortByFrontmatterDate)

  const paginated = paginate(posts, { pageSize: PAGE_SIZE })

  // removes first page (handled separately as the home page)
  paginated.splice(0, 1)

  return paginated.map(({ props, params }) => {
    return {
      props,
      params: {
        page: links.blog(params.page as number).substring(1), // remove leading slash
      },
    }
  })
}

const { page } = await Astro.props
const blogListProps: BlogListProps = {
  posts: page.data,
  currentPage: page.currentPage,
  lastPage: page.lastPage,
  prevPage: page.currentPage - 1,
}
if (blogListProps.currentPage !== blogListProps.lastPage) {
  blogListProps.nextPage = blogListProps.currentPage + 1
}
---

<Layout title={`Page ${page}`}>
  <SEO slot="seo" />
  <Header slot="header" section="blog" />
  <Footer slot="footer" />
  <BlogList {...blogListProps} />
</Layout>
