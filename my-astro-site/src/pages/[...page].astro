---
import type { GetStaticPathsOptions } from 'astro'
import { sortByFrontmatterDate, PAGE_SIZE } from '../utils/posts'
import type { PostType } from '../utils/posts'

import Layout from '../layouts/Layout.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import BlogList from '../components/BlogList.astro'

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = await Astro.glob<PostType>('../../content/posts/**/*.(md|mdx)')
  posts.sort(sortByFrontmatterDate)

  const paginated = paginate(posts, { pageSize: PAGE_SIZE })

  // removes first page (handled separately as the home page)
  paginated.splice(0, 1)

  return paginated.map(({ props, params }) => {
    return {
      props,
      params: {
        page: `page/${params.page}`,
      },
    }
  })
}

const { page } = await Astro.props
---

<Layout title={`Page ${page}`}>
  <Header slot="header" section="blog" />
  <Footer slot="footer" />
  <BlogList
    posts={page.data}
    currentPage={page.currentPage}
    lastPage={page.lastPage}
    prevPage={page.currentPage == 2 ? '/' : `/page/${page.currentPage - 1}`}
    nextPage={page.currentPage != page.lastPage &&
    `/page/${page.currentPage + 1}`}
  />
</Layout>
